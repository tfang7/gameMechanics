using UnityEngine;
using System.Collections;

public class InvulnerabilityPower : MonoBehaviour {
    private float speed = 70.0f;
    public RigidBodyController rbc;
    public float magnetRadius = 20.0f;
    private GameObject player;
    public float lifeTimer;
	// Use this for initialization
	void Start () {
        player = GameObject.FindGameObjectWithTag("Player");
        rbc = player.GetComponent<RigidBodyController>();
        lifeTimer += Time.time;
	}
	
	// Update is called once per frame
	void Update () {
        magnetCheck();
        if (lifeTimer <= Time.time)
        {
            Destroy(gameObject);
        }

    }
    void FixedUpdate()
    {

    }
    void OnTriggerEnter(Collider col)
    {
        if (col.gameObject.CompareTag("Player"))
        {
            if (rbc.powerUp == false)
            {
                rbc.toggleInvuln();
            }
        }
    }
    void magnetCheck()
    {
        Vector3 move = new Vector3(0, 0, speed * Time.deltaTime * -1);
        //transform.position = move;

        float playerdist = Vector3.Distance(transform.position, player.transform.position);
        if (playerdist < magnetRadius)
        {
            transform.LookAt(rbc.transform);
            transform.position = Vector3.MoveTowards(transform.position, player.transform.position, (speed * 5.0f) * Time.deltaTime * 1);
        }
        else
        {
            transform.Translate(move);
        }

    }
}
